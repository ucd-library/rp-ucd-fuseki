=encoding utf8

=head1  NAME

fuseki-db-init - Fuseki initializations

=head1 SYNOPSIS

  fuseki-db-init [-h|--help] <command> [<args>]

  where <command> is one of add-all

fuseki-db-init is a script to help initialize a fuseki database.

=head1 GLOBAL OPTIONS

=over 4

=item B<--tar=I<tar command>>

=item B<--rsync=I<rsync command>>

=item B<--keep>

Use C<tar> and C<rsync> commands, if not specified explicitly, that keep
modified files.

=item B<--overwrite>

Use C<tar> and C<rsync> commands, if not specified explicitly, that
overwrite modified files.

=item B<-h|--help>

Shows the manpage for the program. The help pages are embedded in the
script and require the functions, C<pod2usage> and C<pod2text> to work
properly.

=back

=head1 COMMANDS

currently the following commands can be used:

C<fuseki-db-init [[options]] defaults> will shows all the default values for the
commands to be used in processing.

C<fuseki-db-init [[options]] tdb2.graphs --desc=description_file graphdirs > will
use the passed directory basenames, as graph names (adding C<http://>
prefix and an C</> suffix).  Any C<.ttl> or C<.n3> files will be loaded
into that graph.  You need to specify an assembler file.

C<fuseki-db-init [[options]] tdb2.updates --desc=description_file update_files > will
use tdb2.updater to perform all the updates on the passed C<--desc>
assembler file.

C<fuseki-db-init [[options]] db.tgz tar-files > will extract the C<configuration> and
C<databases> directories from any passed tar file.

C<fuseki-db-init [[options]] db.dir dirs ... > will add all databases found in the
passed directories.  This will add all directories as graph files and any
files matching C<*.sparql-update> will be passed to the tdb2.loader.

C<fuseki-db-init [[options]] db dirs_or_tarfiles> will add all databases found in the
passed directories or tarfiles.

=head1 DESCRIPTION

There are three methods of specifing databases to be initialized.
Filenames that are compressed tar files will have the C<configuration> and
C<databases> directories directly untarred into the C<--base>. Use
C<fuseki_db_init defaults> to see the base location.  By default, the tar
command will not overwrite newer files.  This can be modified by using
C<--overwrite>.

URLS can also be included, and they are expected to point to compressed tar
files as well.

If the filename points to a directory, then first the C<configuration> and
C<databases> directories will be synced to C<--base>, then graphs in the
C<graph> directory will be added using C<tdb2.tdbloader>.  The directory
name is the graph, (with C<http://> added as a prefix and C</> added as a
suffix.  Other characters can be urlencoded in the directory name, and will
be decoded on insertion) and any C<.n3> or C<.ttl> files will be loaded
into that graph.  The first configuration file found is used as the
assembler file, C<--desc> for the loader.  Next, any files with extension
C<sparql-update> will be used to update the database, using
C<tdb2.tdbupdate>.

An example directory tree is shown below:


  ├── configuration
  │   └── material_science.ttl
  ├── databases
  │   └── material_science
  │       └── vivo.owl
  ├── graph
  │   ├── can_insert_data_with_update_too.sparql-update
  │   ├── iam.ucdavis.edu
  │   │   └── experts.ttl
  │   └── oapolicy.universityofcalifornia.edu
  │       └── additions.n3
  └── vivo.sparql-update

=cut
